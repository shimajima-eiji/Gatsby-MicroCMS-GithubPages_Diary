{"componentChunkName":"component---src-templates-blog-post-js","path":"/school_why","result":{"pageContext":{"post":{"mainId":"school_why","title":"【スクールで教えてくれない】プログラミングの読み解き方・プログラムはなぜ分からない？","childConvertHtml":{"convertedHtml":"<h1 id=\"hce751b1b20\">テキストやカリキュラムを見ながら打ち込んだ、そのコマンドの意味を正しく理解していますか？</h1><p>今日言いたいのはこれです。<br>プログラマーになりたいなら、<strong>間違っても動くコードを教えてくれ</strong>なんて言ったらダメです。<br>コピペで貼り付けたそのコードは、あるいは写経したコマンドはいま本当に動かす必要があるコードなのか、しっかり分析しましょう。<br>関数の振る舞いやコマンドの意味、場合によってはライフサイクルを知る必要があります。<br>Web系のプログラマー（フロントエンド・バックエンド問わず）ならブラウザの挙動や仕様まで事細かに把握しなければなりません。</p><h1 id=\"hef504d916c\">間違いだらけのプログラムのイメージ</h1><p>スクール生に向けて書いているので、ここでは「ブラウザで表示されること」をゴールと設定します。<br>Webサーバー（apacheやらnginxやら）立ち上げて英語書いて保存して表示されたら次へ進む、なんて事をやっていてもスクールに通う意味はありません。<br>テキストに書いてある文字はどういう意味なのかを考え、試行錯誤する必要があります。<br>特に、ブラウザに表示される事を確認するのがゴールなので、JavaなりPHPなりRubyで書いたそのスクリプトが、どうやってブラウザで表示されるhtmlになったのかぐらいは知っておかないとマズいです。<br>この作業はフロントエンドで発生する事が多いですが、スクール生の間では</p><ul><li>HTML: テキストファイルに書いたものが表示される</li><li>JavaなりPHPなりRuby: 表示命令(<code>echo</code> なり<code>print</code> なり)に書いたものが表示される</li></ul><p>というような認識をされているような気がしてなりません。<br><br>HTMLについては極端な話、その理解でもいいですがプログラミング言語やスクリプトについてはその理解ではダメです。<br>そもそも間違っています。<br>確かに<code>echo</code> なりでブラウザに出力できますが、ブラウザが<code>echo</code> を理解しているわけではありません。<br>各言語がコンパイル時に<code>echo</code> の内容をブラウザに理解できるようにしている、というのが正しい考え方です。</p><h1 id=\"h4c9b2d0179\">初心者あるある：プログラムが何をやっているか分からない</h1><p>たとえば、</p><pre><code class=\"hljs\">hoge = 1;\n<span class=\"hljs-builtin-name\">print</span> hoge;\n<span class=\"hljs-builtin-name\">print</span> hoge + 1;\nhoge += 1;\n<span class=\"hljs-builtin-name\">print</span> hoge;</code></pre><p>みたいな内容があったとします。<br><code>print</code> じゃなくて<code>echo</code> だったり、<code>print(hoge)</code> だったり書き方は色々ありますが、ここでは出力を意味します。<br><br>これが何をやっているか分かりますか？という事です。<br><a href=\"https://ferret-plus.com/7102\" target=\"_blank\" rel=\"noopener noreferrer\">フローチャート</a>を使って図にしました。<br><picture><source srcSet=\"https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=160&amp;h=90&amp;fm=webp 160w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=320&amp;h=180&amp;fm=webp 320w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=640&amp;h=360&amp;fm=webp 640w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=1280&amp;h=720&amp;fm=webp 1280w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=2560&amp;h=1440&amp;fm=webp 2560w\" type=\"image/webp\"><source srcSet=\"https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=160&amp;h=90 160w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=320&amp;h=180 320w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=640&amp;h=360 640w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=1280&amp;h=720 1280w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=2560&amp;h=1440 2560w\"><img src=\"https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp\" alt=\"\" srcset=\"https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=160&amp;h=90 160w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=320&amp;h=180 320w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=640&amp;h=360 640w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=1280&amp;h=720 1280w, https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/%E3%83%95%E3%83%AD%E3%83%BC%E3%83%81%E3%83%A3%E3%83%BC%E3%83%88.webp?w=2560&amp;h=1440 2560w\" sizes=\"80vw\" loading=\"lazy\"></picture><br>このように、プログラムの処理を日本語で書いて意味を理解する事が大事です。<br>どこも<code>echo</code>  とか<code>print</code>  みたいな簡単なものを言語化しますが、たとえば<code>if</code>  や<code>for</code>  でも考え方は一緒です。<br><code>if</code>  と<code>while</code> や<code>switch</code> は（フローチャートで書くと）同じだと理解しますし、<code>for</code>  と<code>do-while</code>  も同じものです。<br>ちょっとレベルを上げると、<code>foreach</code>  や<code>map</code>  なんかもここに該当しますが、このレベルになったらフローチャートなんて面倒くさくていちいち書かないようになります。<br>このように、ワケのわからない文字の羅列を図形に直して理解する事が肝要です。</p><h1 id=\"h15e3804cff\">構文が理解できない</h1><p>引数が一つしかない場合はいいのですが、引数が複数存在するケースがあります（とても多いです）<br>SQLなんかは引数まみれです。</p><pre><code class=\"hljs\"><span class=\"hljs-selector-tag\">create</span> <span class=\"hljs-selector-tag\">database</span> <span class=\"hljs-selector-attr\">[db_name]</span>  # <span class=\"hljs-selector-attr\">[db_name]</span>という名前でデータベースを作る\n<span class=\"hljs-selector-tag\">use</span> <span class=\"hljs-selector-attr\">[db_name]</span>  # <span class=\"hljs-selector-attr\">[db_name]</span>というデータベースを使う。データベースがなければエラーになる</code></pre><p>この辺りはまだいいです。<br>問題は<code>create table</code>  もセットで教える事が多く、これが混乱の元になってしまっている事です。</p><pre><code class=\"hljs\"><span class=\"hljs-keyword\">create</span> <span class=\"hljs-keyword\">table</span> [<span class=\"hljs-built_in\">table_name</span>]  # [<span class=\"hljs-built_in\">table_name</span>]という名前でテーブルを作る\n(\n  id <span class=\"hljs-type\">int</span>,  # idという項目を<span class=\"hljs-type\">int</span>属性で作る\n  key <span class=\"hljs-type\">varchar</span>,  # keyという項目を<span class=\"hljs-type\">varchar</span>属性で作る\n   <span class=\"hljs-type\">varchar</span>  # <span class=\"hljs-keyword\">value</span>という項目\n)</code></pre><p>大体の場合、<strong>英語を読めない人を考慮していない</strong> のでこういう問題が起こるわけですが、<strong>英語が読めないと技術・品質の高いプログラムは書けない</strong> ので、スクールにいる内から英語を読む癖をつけておく必要があります。<br>また、SQLではじめて引数を２つ以上入力する場合などは苦手意識ができやすいですが、SQLの問題ではないのでご注意ください。</p><h1 id=\"h63d2863644\">何をやっているか分からないけど動いた</h1><p>これが一番たちが悪いです。<br>とりあえず動いたからもういいや、となるタイミングがどこかで必ずあります。<br>苦手意識が出来てしまったのでもうやりたくない、という気持ちは分かりますがスクールのカリキュラムの単元として取り上げられる事なので、実務でも使う機会は多くなります。<br>その度に苦手意識が出てきてしまうと工数増を招いてしまうため、スクールにいるうちに苦手意識を解消しておいた方がいいです。<br>苦手なことほど、理解した後の自信につながります。</p><h1 id=\"h0a0b03289e\">図形で理解するプログラミングシステム</h1><p>要するにフローチャートの事ですが、システム設計とかその辺りの話になると今度はシステム間連携という、もっとよくわからない規模の話をされます。<br>データをどこに送って、どこに保存して、いつから動き始めるとか複雑な話がいっぱい出てくるんです。<br><a href=\"https://nomuraya.web.app/tech_howto\" target=\"_blank\" rel=\"noopener noreferrer\">参考：このブログが全自動・一部半自動で動いている仕組みを解説</a> <br><br>スクールプログラミングのように書けば正解のものから、動いているが結果や内容が正しいか分からない世界に突入します。<br>主にデータサイエンティストと呼ばれる人たちは、このデータが正しいことあるいは正しそうな根拠を探すという事をやり始めます。<br>動けば正解のプログラミングの世界は簡単だなと、内心で思っている人たちがいてもおかしくはありません（私はそう思ってました）<br><br>この人たちも、頭の中でフローをイメージして運用や試験について考えている事が多いです（私は思っています）</p><h1 id=\"h5aee070fbc\">なぜスクールで教えてくれないのか</h1><p>タイトルを読んで疑問に思った人も多いと思います。<br>なぜなら、フローが分かってもプログラミング言語で言うところの何が該当するのか教えるのが大変だからです。<br>カリキュラムにしたらすごいことになります。<br>また、フローが分かってもシステムは作れないからです。ただし、システムを理解する上でフローチャートは重要な役割を持っています。<br><br>システムの実装だけやれば良いプログラマーならフローチャートのような設計図は必要がない事がほとんどですが、システムの設計を考え始めるとフローチャートは必需品です。<br>パワーポイントで資料を作る際もよくでてきます。<br>ただし、パワーポイントで資料を作る現場SEを私は知らないのですが…。</p>"},"tags":["考察"],"description":"テキストやカリキュラムを見ながら打ち込んだ、そのコマンドの意味を正しく理解していますか？今日言いたいのはこれです。プログラマーになりたいなら、間違っても動くコードを教えてくれなんて言ったらダメです。コピペで貼り付けたそのコードは、あるいは写...","door":null,"prev":null,"next":null,"updatedAt":"2021年01月28日 06時20分99秒","publishedAt":"2021年01月28日 06時20分60秒"},"prev":{"mainId":"school_profile","title":"講師紹介","childConvertHtml":{"convertedHtml":"<h1 id=\"hb4b2196b2d\">学びの振り返りをいつでも出来るようにするサイト</h1><p>本サイトを一言でまとめました。<br>スクール等で頑張っている人が、卒業後にどうやって頑張っていくのかをフォローしていく仕組みはありません。<br>スクールを卒業して会社勤めか自営業あるいは起業していくのかは個々人によりますが、学びを得たらそこまでです。<br><br>私はこれを非常に勿体ないと感じていて、スクールとIT人材派遣をマッチングするサービスを考えていたんですがエンジニアの仕事は「案件があれば良い\u001d」というものではないのです。<br>根本的な課題として、プログラマー自身のスキルを高めていく努力を続けられないと、年々新しくなるプログラマーの市場（技術的・トレンドなど）に対応できない可能性が高まります。<br>そこで、マッチングサービスのビジネスよりも学んできた基礎をしっかりと把握できる情報を集約させておく必要があると考えました。</p><h1 id=\"hbb050a06a9\">プログラミングスクールに感じる不便さ</h1><h2 id=\"hf1e7240982\">プログラミングスクールを業界として見た時のポジション（位置づけ）</h2><p>塾生の方はプログラマーになるためのスクールではなく、プログラミングを学ぶためのスクールだと言うことを理解していますか？<br>実際のところ、義務教育の学校システムで慣れているので、学んだスキルを活かして転職まで支援してくれるイメージがあると思います。<br><br><strong>残念ながらプログラミングスクールは転職をサポートする場所ではないです。</strong><br>ビジネス的な意味で言うと人材を養成して人材派遣会社とか、あるいは自社営業で取ってきた案件にアサインするのがゴールです。<br>教育事業としてスクールの月謝と、人材紹介の仲介料の二重取りができます。<br>教育は事業であり慈善活動ではないので、転職をしたいなら人材派遣の会社でスクールをやっている、あるいはコネクションを持っている会社を選ぶのが正しい道です。<br>そして、残念なことに多くの場合、そちらの方がプログラマーとして成長しやすいという事実があります。</p><h2 id=\"h13eda96303\">スクールの教材費は込み？別？</h2><p>プログラミングスクールの教材は入会後にタダで見る事ができます。<br>が、<strong>タダで貰えるわけではありません。</strong><br><br>たとえば、学生時代を思い出してください。<br>学校に行って教科書を買っていたと思いますが、あの教科書ってタダじゃないんですよ。<br>入学日の前後で教科書購入の時間が必ずあったはずです。<br>ご家族の方がいい感じに対応してくれていたり、自分で買いに行ったりしていたと思いますが、「学校を転校・中退・卒業しても手元に残るもの」として存在していたはずです。<br>その後捨てるとか色々あったでしょうが、スクールの教材は自主的に入手する等の対応をしないと、卒業や退学した時に手元に残らないものになります。<br>教科書が紙媒体ではなくデータで配られるようになったとしても、学校のシステムの都合上（家で宿題をやらせるため等）PDFなりで配布するでしょうが、スクールはインターネット環境に接続できない場所での勉強はできません。<br><br>スクールの入学金にカリキュラムの閲覧料金が含まれている事が多いですが、カリキュラムをもらえるわけではないので、自分で対応する必要があるのです。</p><h1 id=\"h8560015097\">サイト運営・使い方</h1><p>私が関わってきたメンタークライアントあるいは塾生の方が、昔教わった・質問した○○ってなんだっけ？と思い出すために使ってほしいです。<br>なので、教材のようにしっかりした作りではなく、トラブルシューティング的に「こういう時ってどうだっけ？」と思い出すための作り方をしています。<br>もちろん、このサイトで学ぶ事もできますがここでは教える気がないので、ぜひ自身で学ぶ環境を作ってから見てください。</p><h1 id=\"h9994d708a6\">免責事項</h1><h2 id=\"h28f1535f1a\">内容の齟齬について</h2><p>以下に注意して対応してください。<br>もしやってみて動かない場合、後述のお問い合わせの通りご対応いただけるとスムーズです。</p><ul><li>特に言語を指定しない場合は、汎用的なものとして考えてください。<ul><li>言語やフレームワークを指定している場合は、ピンポイントなお話です。なるべく明示的に書くようにします。</li></ul></li><li>お使いの環境やパッケージのバージョンによっては振る舞いが異なる事が考えられます。</li><li>コンテンツやサンプルコードは業務で使用していないものや、オリジナルで考えたものですが、プログラミングはゴールへの道筋が決まっており、場合によってはどこかで作成されたコードと酷似あるいは同じ場合が考えられますが、転載をしているものではありません。</li><li>本サイトを利用された際のトラブル等については、運営サイドに責任はありません。</li></ul><h2 id=\"h9082457c23\">お問い合わせについて</h2><p>コメントフォームを設置する代わりに、LINEの直通アドレスを置いています。<br>登録時に「○○（メンターサービス・スクール名）でお世話になった○○（ご自身の名前）です。」とメッセージをいただければ対応します。<br>というのも。サイトの運営方針の都合で会員制にしておらず、一般公開しているため元会員以外でもアクセスが可能です。<br>したがって、どなたでもLINEメッセージのやり取りが出来てしまうので、過去に契約や関わりがなかった方のアフターケアは行いません。<br><br>ただし、誤字脱字ほか表現に問題がある場合はこの限りではありません。<br>問題を見つけたURLを添えてメッセージをいただけると助かります。<br><br>予めご了承ください。</p><h1 id=\"hd264b50d46\">お願い</h1><p>このサイトに書いている内容は完全性を保証していませんし、スクールで得た知見を活かして業務に活用してもらう時の補助的な役割を担える事を期待しています。<br>そのため、ここに書いてある内容\bだけで業務を完結する事はできませんし、サンプルコードもそのまま使えるものではありません。<br>各自のご相談事項については、お仕事として伺う事はできますので、LINEなどでお仕事の相談としてご連絡いただきます。</p>"},"tags":["お仕事関連","ブログについて"],"description":"学びの振り返りをいつでも出来るようにするサイト本サイトを一言でまとめました。スクール等で頑張っている人が、卒業後にどうやって頑張っていくのかをフォローしていく仕組みはありません。スクールを卒業して会社勤めか自営業あるいは起業していくのかは個...","door":null,"prev":null,"next":null,"updatedAt":"2021年01月28日 01時25分82秒","publishedAt":"2021年01月28日 01時25分82秒"},"next":{"mainId":"tech_rss","title":"RSS機能を追加しました（承認制）","childConvertHtml":{"convertedHtml":"<p>のむらやです、<br>需要がありそうなのでRSS機能を作成しました。<br>が、Gatsbyの機能（そうでなくても）を使うとまとめブログやアンテナサイトに持っていかれそうなので非公開としました。<br>具体的には、生成したデータを使ってWebスクレイピングを実行してxmlに整形してファイルを公開している、という流れです。<br>Githubとか外部に公開できるプライベートリポジトリなどを作ってスクレイピングした<code>rss.xml</code>  をアップロードして、xmlの情報を使って各サービスで連携しています。</p><h1 id=\"h8cb08b9668\">RSSを作った経緯</h1><p>TwitterやInstagramなどはAPIが提供されていなかったので、やむなくヘッドレスブラウザでポチポチやらせていますが、APIやWehhookを提供しているサイトについては、MicroCMSから発信した情報を使ったりできるのでRSSなんて要らなかったんですよね。<br>それがどうして突然RSSが必要になってしまったかというお話なんですが、自分で記事を振り返りたい時にRSSフィード（リーダー）を使っているからです。<br>以前SlackにWebhookで送信しているという話をしましたが、Slackはあくまで連絡ツールであり、サイトリーダーではないので使い心地が良くない。<br>当たり前といえば当たり前ですが、いつも使っているツールで便利に使える事はやはり強いなと感じました。</p><h1 id=\"h908444fb5e\">RSSを公開しない理由</h1><p>先述した通り、まとめサイトやアンテナサイトに持っていかれるからです。<br>彼らは転載（RSSを持っていくこと）をしているという自覚はありません。<br>実際にサイトに行って文章をコピー＆ペーストしているわけではないので問題ないという考え方です。<br><br>著作権を侵害する行為はコピーする意思があったかどうかは問題ではなく、転載をしたかどうかがポイントなのでこのような言い訳は成立しません。<br>従って、サイトに行こうが行かなかろうが転載は転載です。<br>同様に、Webスクレイピングしたものを自分のコンテンツだと偽ってサイトに掲載する行為も転載です。</p>"},"tags":[],"description":"のむらやです、需要がありそうなのでRSS機能を作成しました。が、Gatsbyの機能（そうでなくても）を使うとまとめブログやアンテナサイトに持っていかれそうなので非公開としました。具体的には、生成したデータを使ってWebスクレイピングを実行し...","door":{"url":"https://images.microcms-assets.io/protected/ap-northeast-1:45600192-d42c-45d5-a8f8-dad14f377d3c/service/diary/media/rss.webp"},"prev":null,"next":null,"updatedAt":"2021年01月28日 08時00分82秒","publishedAt":"2021年01月28日 08時00分82秒"},"site":{"title":"インターネット老人おぢさん","siteUrl":"https://speedtest-netlify.netlify.app"}}},"staticQueryHashes":["3156519155","370162261"]}