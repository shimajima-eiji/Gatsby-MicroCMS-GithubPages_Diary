{"version":3,"sources":["webpack:///./node_modules/striptags/src/striptags.js","webpack:///./src/pages/index.js"],"names":["global","Symbol","name","nonNative","STATE_PLAINTEXT","STATE_HTML","STATE_COMMENT","ALLOWED_TAGS_REGEX","NORMALIZE_TAG_REGEX","striptags","html","allowable_tags","tag_replacement","striptags_internal","init_context","match","tag_set","Set","exec","add","iterator","forEach","parse_allowable_tags","state","tag_buffer","depth","in_quote_char","context","output","idx","length","char","has","normalize_tag","slice","toLowerCase","init_streaming_mode","Style_normal_text","Style_container","css","Style_information","Style_blog_list","Style_contents","Style_link","Style_column_profile","Style_layout_block","data","title","allMicrocmsMain","nodes","map","node","id","mainId","to","door","loading","src","url","alt","layout","style","width","height","updatedAt","description","body","replace","trim","site","siteMetadata"],"mappings":"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","file":"component---src-pages-index-js-cf6ec9e55faf676c92b3.js","sourcesContent":["'use strict';\n\n(function (global) {\n  // minimal symbol polyfill for IE11 and others\n  if (typeof Symbol !== 'function') {\n    var Symbol = function Symbol(name) {\n      return name;\n    };\n\n    Symbol.nonNative = true;\n  }\n\n  var STATE_PLAINTEXT = Symbol('plaintext');\n  var STATE_HTML = Symbol('html');\n  var STATE_COMMENT = Symbol('comment');\n  var ALLOWED_TAGS_REGEX = /<(\\w*)>/g;\n  var NORMALIZE_TAG_REGEX = /<\\/?([^\\s\\/>]+)/;\n\n  function striptags(html, allowable_tags, tag_replacement) {\n    html = html || '';\n    allowable_tags = allowable_tags || [];\n    tag_replacement = tag_replacement || '';\n    var context = init_context(allowable_tags, tag_replacement);\n    return striptags_internal(html, context);\n  }\n\n  function init_striptags_stream(allowable_tags, tag_replacement) {\n    allowable_tags = allowable_tags || [];\n    tag_replacement = tag_replacement || '';\n    var context = init_context(allowable_tags, tag_replacement);\n    return function striptags_stream(html) {\n      return striptags_internal(html || '', context);\n    };\n  }\n\n  striptags.init_streaming_mode = init_striptags_stream;\n\n  function init_context(allowable_tags, tag_replacement) {\n    allowable_tags = parse_allowable_tags(allowable_tags);\n    return {\n      allowable_tags: allowable_tags,\n      tag_replacement: tag_replacement,\n      state: STATE_PLAINTEXT,\n      tag_buffer: '',\n      depth: 0,\n      in_quote_char: ''\n    };\n  }\n\n  function striptags_internal(html, context) {\n    var allowable_tags = context.allowable_tags;\n    var tag_replacement = context.tag_replacement;\n    var state = context.state;\n    var tag_buffer = context.tag_buffer;\n    var depth = context.depth;\n    var in_quote_char = context.in_quote_char;\n    var output = '';\n\n    for (var idx = 0, length = html.length; idx < length; idx++) {\n      var char = html[idx];\n\n      if (state === STATE_PLAINTEXT) {\n        switch (char) {\n          case '<':\n            state = STATE_HTML;\n            tag_buffer += char;\n            break;\n\n          default:\n            output += char;\n            break;\n        }\n      } else if (state === STATE_HTML) {\n        switch (char) {\n          case '<':\n            // ignore '<' if inside a quote\n            if (in_quote_char) {\n              break;\n            } // we're seeing a nested '<'\n\n\n            depth++;\n            break;\n\n          case '>':\n            // ignore '>' if inside a quote\n            if (in_quote_char) {\n              break;\n            } // something like this is happening: '<<>>'\n\n\n            if (depth) {\n              depth--;\n              break;\n            } // this is closing the tag in tag_buffer\n\n\n            in_quote_char = '';\n            state = STATE_PLAINTEXT;\n            tag_buffer += '>';\n\n            if (allowable_tags.has(normalize_tag(tag_buffer))) {\n              output += tag_buffer;\n            } else {\n              output += tag_replacement;\n            }\n\n            tag_buffer = '';\n            break;\n\n          case '\"':\n          case '\\'':\n            // catch both single and double quotes\n            if (char === in_quote_char) {\n              in_quote_char = '';\n            } else {\n              in_quote_char = in_quote_char || char;\n            }\n\n            tag_buffer += char;\n            break;\n\n          case '-':\n            if (tag_buffer === '<!-') {\n              state = STATE_COMMENT;\n            }\n\n            tag_buffer += char;\n            break;\n\n          case ' ':\n          case '\\n':\n            if (tag_buffer === '<') {\n              state = STATE_PLAINTEXT;\n              output += '< ';\n              tag_buffer = '';\n              break;\n            }\n\n            tag_buffer += char;\n            break;\n\n          default:\n            tag_buffer += char;\n            break;\n        }\n      } else if (state === STATE_COMMENT) {\n        switch (char) {\n          case '>':\n            if (tag_buffer.slice(-2) == '--') {\n              // close the comment\n              state = STATE_PLAINTEXT;\n            }\n\n            tag_buffer = '';\n            break;\n\n          default:\n            tag_buffer += char;\n            break;\n        }\n      }\n    } // save the context for future iterations\n\n\n    context.state = state;\n    context.tag_buffer = tag_buffer;\n    context.depth = depth;\n    context.in_quote_char = in_quote_char;\n    return output;\n  }\n\n  function parse_allowable_tags(allowable_tags) {\n    var tag_set = new Set();\n\n    if (typeof allowable_tags === 'string') {\n      var match;\n\n      while (match = ALLOWED_TAGS_REGEX.exec(allowable_tags)) {\n        tag_set.add(match[1]);\n      }\n    } else if (!Symbol.nonNative && typeof allowable_tags[Symbol.iterator] === 'function') {\n      tag_set = new Set(allowable_tags);\n    } else if (typeof allowable_tags.forEach === 'function') {\n      // IE11 compatible\n      allowable_tags.forEach(tag_set.add, tag_set);\n    }\n\n    return tag_set;\n  }\n\n  function normalize_tag(tag_buffer) {\n    var match = NORMALIZE_TAG_REGEX.exec(tag_buffer);\n    return match ? match[1].toLowerCase() : null;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define(function module_factory() {\n      return striptags;\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node\n    module.exports = striptags;\n  } else {\n    // Browser\n    global.striptags = striptags;\n  }\n})(this);","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport striptags from \"striptags\"  // FYI: https://github.com/ericnorris/striptags\nimport { StaticImage } from \"gatsby-plugin-image\"  // FYI: https://ebisu.com/note/new-gatsby-image/\n\n// FYI: https://webcraftlog.net/best-gatsbyjs-plugins/\nimport Layout from \"@components/layout\"\nimport SEO from \"@components/seo\"\n\n////  css in JS(emotion)  ////\nimport { css } from \"@emotion/react\";  // need: @emotion/react FYI: https://blog.ojisan.io/s-c-kigo\n\n// 共通\nconst Style_normal_text = css`\n  text-align: justify;\n`\n\n// 固有\nconst Css_column_select_width = \"805px\";\nconst Style_container = css`\n  @media(min-Width:${Css_column_select_width}) {\n    display: flex;\n  }\n  letter-spacing: -0.07em;\n`\n\nconst Style_information = css`\n  background-color: lightskyblue;\n  border: solid 2px;\n  border-radius: 1vh;\n\n  margin-bottom: 1vh;\n  text-align: center;\n  padding: 2vh;\n\n  font-size: 150%;\n`\n\nconst Style_blog_list = css`\n  background-color: lightblue;\n  border: solid 2px;\n  border-radius: 2vh;\n  padding: 20px;\n  margin-bottom: 3px;\n\n`\n\nconst Style_contents = css`\n  span {\n    font-size: 75%;\n  }\n\n  p {\n    font-size: 110%;\n  }\n  img, div.gatsby-image-wrapper {\n    margin-left: 20px;\n    display: block;\n    float: right;\n    max-width: 200px;\n    max-height: 200px;\n  }\n\n  @media( min-width: 960px ) {\n    max-width: 720px;\n  }\n\n  h1 {\n    font-size: 150%;\n    border-top: double 5px;\n    border-bottom: double 5px;\n    border-left: solid 6px;\n    padding: 4px 0 4px 4px;\n    margin-left: -10px;\n  }\n\n  h1 a{\n    font-family: \"corp\";\n  }\n`\n\nconst Style_link = css`\n  padding: 1vw 2vh;\n  border: 3px solid #000;\n  border-radius: 50vw;\n\n  background-color: lightgreen;\n  font-size: 3.5vh;\n  text-align: center;\n\n  :hover {\n    background-color: yellowgreen;\n    font-weight: bold;\n  }\n`\n\nconst Style_column_profile = css`\n  border: solid 2px;\n  border-radius: 2vh;\n  padding: 10px;\n  background-color: lightgoldenrodyellow;\n`\n\nconst Style_layout_block = css`\n  @media(max-Width:${Css_column_select_width}) {\n    display: flex;\n  }\n  @media( min-width: ${Css_column_select_width}) {\n    width: 100%;\n    max-width: 200px;\n  }\n\n  text-align: justify;\n`\n\nfunction sumarrize ( html )\n{\n  return striptags( html ).replace( /\\r?\\n/g, '' ).trim();\n}\n\nexport default ( { data } ) =>\n{\n  const noImage = \"../images/icon.webp\"\n  return (\n    <Layout>\n      <SEO title=\"記事一覧\" />\n      <div css={ Style_container }>\n        <section>\n          <h1 css={ Style_information }>新しく書いた記事が上に来ます。</h1>\n          { data.allMicrocmsMain.nodes.map( node =>\n          {\n            return (\n              <article css={ Style_blog_list } id={ node.mainId } >\n                <div css={ [ Style_contents, Style_normal_text ] }>\n                  <Link to={ node.mainId }>\n                    { ( node.door )\n                      ? <img loading=\"lazy\" src={ node.door.url } alt={ node.title } />\n                      : <StaticImage\n                        src={ noImage }\n                        layout=\"fluid\"\n                        style={ { width: \"200px\", height: \"200px\" } }\n                        alt={ node.title }\n                      />\n                    }\n                    <h1>{ node.title }　<span>{ node.updatedAt }</span></h1></Link>\n                  <p>{ node.description || sumarrize( node.body ).slice( 0, 100 ) + '......' } </p>\n                </div>\n                <div css={ Style_link }><Link to={ node.mainId }>続きを読む　<span>({ node.body.length }文字</span>)</Link></div>\n              </article>\n            );\n          } ) }\n        </section>\n        <aside css={ Style_column_profile }>\n          <h1>Author</h1>\n          <div css={ Style_layout_block }>\n            <div>\n              <StaticImage\n                src=\"../images/author-face.webp\"\n                layout=\"fluid\"\n                style={ { width: \"128px\", height: \"128px\" } }\n                alt=\"のむらや\"\n              />\n              <Link to=\"https://lin.ee/Oq7UfMd\">\n                <StaticImage\n                  src=\"../images/LINE友だち追加.png\"\n                  layout=\"fluid\"\n                  style={ { width: \"128px\" } }\n                  alt=\"友だち追加\"\n                />\n              </Link>\n            </div>\n            <div>\n              <span>\n                { data.site.siteMetadata.description }\n              </span>\n            </div>\n          </div>\n        </aside>\n      </div>\n    </Layout >\n  )\n}\n\nexport const query = graphql`\nquery {\n  site {\n    siteMetadata {\n      author\n      description\n      url: siteUrl\n      title\n    }\n  }\n  allMicrocmsMain (sort: {order: DESC, fields: publishedAt}) {\n    nodes {\n      mainId\n      title\n      description\n      body\n      door {\n        url\n      }\n      updatedAt(formatString: \"YY年M月D日\")\n    }\n  }\n}\n`;\n"],"sourceRoot":""}